import time
import threading
from infrastructure.habit_repository import HabitRepository


class HabitScheduler:
    def __init__(self):
        self.repo = HabitRepository()

    def check_habits(self):
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤—Å–µ –ø—Ä–∏–≤—ã—á–∫–∏ –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É."""
        while True:
            now = int(time.time())
            habits = self.repo.get_all_habits()

            for habit in habits:
                start_date = habit["start_date"]
                period = habit["period"]
                last_completed = habit.get("last_completed", None)

                # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–ª–µ–¥—É—é—â–µ–µ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
                days_since_start = (now - start_date) // period
                next_due = start_date + (days_since_start + 1) * period

                # –ï—Å–ª–∏ –ø—Ä–∏–≤—ã—á–∫–∞ –µ—â–µ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –∏ –ø—Ä–∏—à–ª–æ –≤—Ä–µ–º—è ‚Äî –Ω–∞–ø–æ–º–∏–Ω–∞–µ–º
                if now >= next_due:
                    if not habit["is_completed"]:
                        print(f"üîî –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–∏—Ç—å –ø—Ä–∏–≤—ã—á–∫—É: {habit['title']}!")

                # –ï—Å–ª–∏ –ø—Ä–∏–≤—ã—á–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞, –Ω–æ —É–∂–µ –ø—Ä–æ—à–ª–æ –≤—Ä–µ–º—è –¥–ª—è –Ω–æ–≤–æ–≥–æ —Ü–∏–∫–ª–∞ ‚Äî —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å
                if habit["is_completed"] and last_completed and now >= next_due:
                    habit["is_completed"] = False
                    self.repo.update_habit(habit["habit_id"], habit)
                    print(f"üîÑ –ü—Ä–∏–≤—ã—á–∫–∞ '{habit['title']}' —Å–±—Ä–æ—à–µ–Ω–∞ –Ω–∞ –Ω–æ–≤—ã–π —Ü–∏–∫–ª.")

            time.sleep(1)  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É

    def start(self):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ."""
        thread = threading.Thread(target=self.check_habits, daemon=True)
        thread.start()
